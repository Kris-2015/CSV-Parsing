<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use App\Models\User;
use App\Models\TestData;
use Exception;
use DB;

/**
 * Model for test table
 * @access public
 * @package App\Http\Controllers
 * @subpackage void
 * @category void
 * @author mfsi-krishnadev
 * @link void
 */
class Test extends Model
{

    // Defining the table name of the model
    protected $table= 'tests';
    public $timestamps = false;

    /**
     * Function to insert test type information
     *
     * @param test type
     * @return integer
     */
    public static function insertTestData($data)
    {
        try
        {
            // Default return value
            $response = 0;

           // Get the user status by token
           $getUserStatus = User::find($data['token']);

           // Insert test record if test complete is 0
           if ($getUserStatus['test_complete'] == 0)
           {
                // Update the users table of test complete with current request value
                User::updateTestComplete($data);

                // Check the existance of the incoming test record by user id, ordinal and posture
                $check = Test::where([
                    [ 'user_id',  '=', $data['token'] ],
                    [ 'ordinal', '=', $data['ordinal'] ],
                    [ 'posture',  '=', $data['posture'] ]
                ])->get();

                // If there is no previous record present, proceed for insertion
                if ( $check->isEmpty() )
                {
                    
                    // Instantiate the Test class
                    $objTest = new Test();

                    $objTest->user_id = $data['token'];
                    $objTest->posture = $data['posture'];
                    $objTest->ordinal = $data['ordinal'];
                    $objTest->start_time = $data['start_time'];
                    $successTest = $objTest->save();

                    // On successful insertion, proceed with accelerometer data
                    if ( $successTest )
                    {
                        // Associate the test id and acceleration data
                        $testData = array(
                            'test_id' => $objTest->id,
                            'accelerationData' => $data['acceleration_data']
                        );

                        // Insert the test data
                        $successTestData = TestData::insertTestResult($testData);

                        // Throw error if test data got failed to inserted
                        if ( $successTestData === 0 )
                        {
                            throw new QueryException("Error occured while processing request in Test Data ");
                        }

                        // Return true on success
                        $response = $successTestData;
                    }
                }
                else
                {
                    $response = -1;
                }
            }
            else
            {
                // Return -2 as test is already complete
                $response = -2;
            }
        }
        catch ( \Exception $e)
        {
            // Logging error
            errorReporting($e);

            // Return false as error has occured
            $response = 0;
        }

        return $response;
    }
}
